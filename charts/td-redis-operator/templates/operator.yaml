{{- if .Values.type -}}
{{- $type := list "none" "all" "cluster" "standby" "manager" }}
{{- if has .Values.type $type }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.name }}
  namespace: {{ default .Values.namespace .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Values.name }}
  namespace: {{ default .Values.namespace .Release.Namespace }}
rules:
  - apiGroups:
      - cache.tongdun.net
    resources:
      - redisclusters
      - redisstandbies
      - redisstandbies/status
      - redisclusters/status
    verbs:
      - create
      - delete
      - deletecollection
      - update
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
    verbs:
      - create
      - delete
      - deletecollection
      - update
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - pods
      - endpoints
      - configmaps
    verbs:
      - create
      - delete
      - deletecollection
      - update
      - patch
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.name }}
  namespace: {{ default .Values.namespace .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.name }}
    namespace: {{ default .Values.namespace .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
  namespace: {{ default .Values.namespace .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - command:
        - /app/operator
        - --namespace={{ default .Values.namespace .Release.Namespace }}
        - --v=6
        image: "{{ .Values.registry }}/{{ .Values.image.name}}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Values.name }}
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ .Values.name }}
      serviceAccountName: {{ .Values.name }}
      terminationGracePeriodSeconds: 30
{{- end }}
{{- end }}